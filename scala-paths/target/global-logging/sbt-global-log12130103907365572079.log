[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.2 (Oracle Corporation Java 11.0.16)
[debug]       Load.loadUnit: plugins took 28.5751ms
[debug]       Load.loadUnit: defsScala took 0.004ms
[debug] [Loading] Scanning directory C:\Users\Piotr Damrych\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Piotr Damrych\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.3288 ms
[debug]           Load.resolveProject(global-plugins) took 1.2308ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Piotr Damrych\.sbt\1.0\plugins, plugins: List(<none>))) took 3.9978ms
[debug] [Loading] Done in C:\Users\Piotr Damrych\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 5.355ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0116ms
[debug]     Load.loadUnit(file:/C:/Users/Piotr%20Damrych/.sbt/1.0/plugins/, ...) took 34.5332ms
[debug]   Load.apply: load took 35.9725ms
[debug]   Load.apply: resolveProjects took 0.0944ms
[debug]   Load.apply: finalTransforms took 6.8462ms
[debug]   Load.apply: config.delegates took 0.3073ms
[debug]   Load.apply: Def.make(settings)... took 37.8064ms
[debug]   Load.apply: structureIndex took 19.6656ms
[debug]   Load.apply: mkStreams took 0.0029ms
[info] loading global plugins from C:\Users\Piotr Damrych\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 384.5309ms
[debug]           Load.loadUnit: plugins took 33.2695ms
[debug]           Load.loadUnit: defsScala took 0.0081ms
[debug] [Loading] Scanning directory C:\Users\Piotr Damrych\Desktop\virtus\scala-paths\scala-paths\project
[debug]             Load.loadUnit: mkEval took 0.3945ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Piotr Damrych\Desktop\virtus\scala-paths\scala-paths\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.4737 ms
[info] loading settings for project scala-paths-build from idea.sbt ...
[debug]               Load.resolveProject(scala-paths-build) took 1.4844ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-paths-build, base: C:\Users\Piotr Damrych\Desktop\virtus\scala-paths\scala-paths\project, plugins: List(<none>))) took 3.3649ms
[debug] [Loading] Done in C:\Users\Piotr Damrych\Desktop\virtus\scala-paths\scala-paths\project, returning: (scala-paths-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 32.5391ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.7656ms
[debug]         Load.loadUnit(file:/C:/Users/Piotr%20Damrych/Desktop/virtus/scala-paths/scala-paths/project/, ...) took 67.235ms
[debug]       Load.apply: load took 68.9338ms
[debug]       Load.apply: resolveProjects took 0.0971ms
[debug]       Load.apply: finalTransforms took 6.4206ms
[debug]       Load.apply: config.delegates took 0.3189ms
[debug]       Load.apply: Def.make(settings)... took 41.8118ms
[debug]       Load.apply: structureIndex took 17.5925ms
[debug]       Load.apply: mkStreams took 0.0023ms
[info] loading project definition from C:\Users\Piotr Damrych\Desktop\virtus\scala-paths\scala-paths\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 280.0389ms
[debug]     Load.loadUnit: defsScala took 0.0036ms
[debug] [Loading] Scanning directory C:\Users\Piotr Damrych\Desktop\virtus\scala-paths\scala-paths
[debug]       Load.loadUnit: mkEval took 0.4178ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.3497 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 52.3181ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Piotr Damrych\Desktop\virtus\scala-paths\scala-paths, plugins: List(<none>))) took 55.5345ms
[debug] [Loading] Done in C:\Users\Piotr Damrych\Desktop\virtus\scala-paths\scala-paths, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 116.6787ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.8933ms
[debug]   Load.loadUnit(file:/C:/Users/Piotr%20Damrych/Desktop/virtus/scala-paths/scala-paths/, ...) took 402.3341ms
[debug] Load.apply: load took 404.8178ms
[debug] Load.apply: resolveProjects took 0.1451ms
[debug] Load.apply: finalTransforms took 21.145ms
[debug] Load.apply: config.delegates took 0.3264ms
[debug] Load.apply: Def.make(settings)... took 65.7373ms
[debug] Load.apply: structureIndex took 26.3972ms
[debug] Load.apply: mkStreams took 0.0032ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to scala-paths (in build file:/C:/Users/Piotr%20Damrych/Desktop/virtus/scala-paths/scala-paths/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
